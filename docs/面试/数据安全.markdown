---
layout: default
title: 数据安全
nav_order: 2
parent: 面试
---

## 数字签名

简单来说是通过提供可鉴别的数字信息验证自身身份的一种方式。签名最根本的用途是要能够唯一证明发送方的身份，防止中间人攻击，CSRF跨域身份伪造。


CSRF跨域身份伪造：

攻击者通过一些技术手段欺骗用户的浏览器去访问一个自己曾经认证过的网站并执行一些操作(如发邮件，发消息，甚至财产操作如转账和购买商品等)。由于浏览器曾经认证过，所以被访问的网站会认为是真正的用户操作而去执行。这利用了web中用户身份认证的一个漏洞：简单的身份验证只能保证请求发自某个用户的浏览器，却不能保证请求本身是用户自愿发出的。

![image](../../../images/Interview/CSRF.webp)


防止跨域身份伪造方式：

- 提交验证码，强制用户与应用进行交互
- Referer Check 标志请求来源
- token验证
- 在HTTP头中自定义属性并验证

## 加密/解密

数据加密的基本过程，就是对原来为明文的文件或数据按某种算法进行处理，使其成为不可读的一段代码，通常称为“密文”。通过这样的方式，来达到保护数据不被非法人窃取、阅读的目的。

加密的逆过程为解密，即将该编码信息转化为其原来数据的过程。

加密算法分对称加密和非对称加密，其中对称加密算法的加密与解密密钥相同，非对称加密算法的加密密钥与解密密钥不同，此外，还有一类不需要密钥的散列算法。

对称加密:

- DES
- AES
- 3DES

非对称算法：

- RSA
- DSA

散列算法

- SHA-1
- MD5

### 对称加密

在对称加密算法中，使用的密钥只有一个，发送和接收双方都使用这个密钥对数据进行加密和解密。

- 在对称加密算法中，数据发送方将明文和加密密钥一起经过特殊加密处理，生成复杂的加密密文进行发送。
- 数据接收方收到密文后，若想读取原数据，则需要使用加密使用的密钥及相同算法的逆算法对加密的密文进行解密，才能使其恢复成可读明文

### 非对称加密

非对称加密算法，又称为公开密钥加密算法。需要两个密钥，一个称为公开密钥，即公钥，另一个称为私有密钥，即私钥。

- 如果使用公钥对数据进行加密，只有对应的私钥才能进行解密
- 如果使用私钥对数据进行加密，只有对应的公钥才能进行解密

## 常见的签名加密算法

### MD5算法

MD5用的是哈希函数，它的典型应用是对一段信息产生信息摘要，以防止被篡改、防抵赖。严格来说，MD5不是一种加密算法，而是摘要算法。无论是多长的输入，MD5都会输出长度128bits的一个串（通常用16进制表示为32个字符）

[MD5的实现原理](https://www.jianshu.com/p/82729c87ef68)

### SHA1算法

SHA1是和MD5一样流行的消息摘要算法，然而SHA1比MD5的安全性更强。对于长度小于2^64位的消息，SHA1会产生一个160位的消息摘要。

[SHA1算法原理](https://www.cnblogs.com/scu-cjx/p/6878853.html)

- 安全性：SHA1所产生的摘要要比MD5长32位。若两种散列函数在结构上没有任何问题的话，SHA1比MD5更加安全。
- 速度：SHA1慢于MD5
- 简易性：SHA1对每一步骤的操作描述比MD5简单

### AES算法

常用的有AES128、AES192、AES256

AES加密算法是密码学中的高级加密标准，该加密算法采用对称分组密码体制，密钥长度的最少支持位128位、192位、256位，分组长度128位。

AES本身就是为了取代DES的，AES具有更好的安全性、效率和灵活性。

### DES算法

DES加密算法是一种分组密码，以64位为分组对数据加密，它的密钥长度是56位，加密解读用同一算法。

DES加密算法是对密钥进行保密，而公开算法，包括加密和解密算法。这样，只有掌握了和发送方相同密钥的人才能解读由DES加密算法加密的密文数据。因此破译DES加密算法实际上就是搜索密钥的编码。对于56位长度的密钥来说，如果用穷举法来进行搜索的话，其运算次数位2^56次。

### 3DES算法

是基于DES的对称算法，对一块数据用三个不同的密钥进行三次加密，强度更高。

### RSA算法

RSA加密算法是第一个能同时用于加密和数字签名的算法，它能抵抗到目前为止已知的所有密码攻击。

RSA加密算法是基于一个十分简单的数论事实：将两个大素数相乘十分容易，但要对其乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。

### ECC算法

ECC也是一种非对称加密算法，主要优势是在某些情况下，它比其他的方法使用更小的密钥，比如RSA加密算法，提供相当的或更高等级的安全级别。不过缺点是加密和解密操作的实现比其他机制时间长，CPU消耗严重

## 算法比较

散列算法|安全性|速度
SHA-1|高|慢
MD5|中|快


对称加密算法|密钥名称|运行速度|安全性|资源消耗
DES|56位|较快|低|中
3DES|112位/168位|慢|中|高
AES|128/192/256|快|高|低


非对称加密|成熟度|安全性|运算速度|资源消耗
RSA|高|高|中|中
ECC|高|高|慢|高


类型|密钥管理|安全性|加密速度
对称算法|比较难，一般用于内部系统|中|适合大数据量的加解密处理
非对称算法|密钥容易管理|高|比较慢，适合小数据量加解密/数据签名
