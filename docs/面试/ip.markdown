---
layout: default
title: ip
nav_order: 6
parent: 面试
---

## 网络七层协议

OSI是一个开放性的通信系统互连参考模型，它是一个定义得非常好的协议规范。OSI模型有七层结构，每层都可以有几个子层。OSI的七层从上到下分别是7应用层、6表示层、5会话层、4传输层、3网络层、2数据链路层、1物理层；其中高层(即7，6，5，4)定义了应用程序的功能，下面3层(即3、2、1)主要面向网络的端到端，点到点的数据流。

### 应用层

与其它计算机进行通讯的一个应用，它是对应应用程序的通信服务的。HTTP、FTP、NFS、SMTP

### 表示层

这一层的主要功能是定义数据格式及加密

### 会话层

它定义了如何开始、控制和结束一个会话，包括对多个双向消息的控制和管理，以便在只完成连续消息的一部分时间可以通知应用，从而使表示层看到的数据是连续的。RPC、SQL

会话层提供的服务可使应用建立和维持会话，并能使会话获得同步。会话层使用检验点可使通信会话在通信失效时从校验点恢复通信。这种能力对于传送大的文件极为重要。

### 传输层

这层的功能包括是否选择差错恢复协议还是无差错恢复协议，及在同一主机上对不同应用的数据流的输入进行复用，还包括对收到的顺序不对的数据包进行重排功能。TCP、UDP、SPX

传输层是两台计算机经过网络进行数据通信时，第一个端到端的层次，具有缓冲作用。当网络层服务质量不能满足要求时，它将服务加以提高，以满足高层的要求；当网络层服务质量较好时，它只用很少的工作。传输层还可以进行复用，即在一个网络连接上创建多个逻辑连接。

### 网络层

这层对端到端的包传输进行定义，它定义了能够标识所有结点的逻辑地址，还定义了路由实现的方式和学习方式。为了适应最大传输单元长度小于包长度的传输介质，网络层还定义了如何将包分解成更小的包的分段方法。IP、IPX

主要功能：

- 路由选择和中继
- 激活，终止网络连接
- 在一条数据链路上复用多条网络连接，多采用分时复用技术
- 差错检测与恢复
- 排序，流量控制
- 服务选择
- 网络管理

### 数据链路层

它定义了在单个链路上如何传输数据。这些协议与被讨论的各种介质有关。ATM、FDDI

数据链路可以粗略地理解为数据通道。物理层要为终端设备间的数据通信提供传输媒体及其连接。媒体是长期的，连接是有生存期的，在连接生存期内，收发两端可以进行不等的一次或多次数据通信。每次通信都要经过建立通信联络和拆除通信联络两过程。这种建立起来的数据收发关系就叫作数据链路。

而在物理媒体上传输数据难免受到各种不可靠因素影响而产生差错，为了弥补物理层上的不足，为上层提供无差错的数据传输，就要对数据进行检错和纠错，数据链路的建立、拆除，对数据的检错，纠错是数据链路的基本任务。


### 物理层

OSI的物理层规范是有关传输介质的特性，这些规范通常也参考了其他组织制定的标准。连接头、帧、帧的使用、电流、编码以及光调制等都属于各种物理层规范的内容。Rj45、802.3

为设备之间的数据通信提供传输媒体及互连设备，为数据传输提供可靠的环境。媒体包括：架空明线，平衡电缆、光纤、无线信道等。

主要功能：

- 为数据端设备提供传送数据的通路，数据通路可以是一个物理媒体，也可以是多个物理媒体连接而成。
- 传输数据，物理层要形成合适数据传输需要的实体，为数据传送服务。一是要保证数据能在其上正确通过，二是要提供足够的带宽，以减少信道上的拥塞。


## 网络请求过程

[当输入 xxxxHub 后，到网页显示，其间发生了什么](https://mp.weixin.qq.com/s/0Ej4EppsL8XlJHhEM50lcA)

- 解析URL,生成http请求
- 查询DNS
- 


tcp包格式:
- 源端口号、目标端口号
- 包的序号：解决包乱序问题
- 确认号：确认对方是否收到，未收到则重发，解决丢包问题
- 状态位：SYN连接、ACK回复、RST重连接、FIN结束连接
- 窗口大小：流量控制，标识自己当前能够处理的能力

tcp分割数据：

如果http请求消息比较长，超过了MSS的长度，数据进行拆解

- MTU:一个网络包的最大长度，以太网中一般为1500字节
- MSS：除去IP和TCP头部之后，一个网络包所能容纳的TCP数据的最大长度。

数据会被以 MSS 的长度为单位进行拆分，拆分出来的每一块数据都会被放进单独的网络包中。也就是在每个被拆分的数据加上 TCP 头信息，然后交给 IP 模块来发送数据。


ip包格式：
- 源地址IP
- 目标地址IP：DNS域名解析得到的ip

MAC包格式:
- 接收方MAC地址：通过ARP协议在以太网中广播问询
- 发送方MAC地址
- 协议类型

一般在TCP/IP通信里，MAC包头的协议类型只使用：

- 0800: IP协议
- 0806: ARP协议


网卡：
ip生成的网络包只是存放在内存中的一串二进制数字信息，没有办法直接发送给对方。因此，我们需要将数字信息转换为电信号，才能在网线上传输，也就是说，这才是真正的数据发送过程。

负责执行这一操作的是网卡，要控制网卡还需要靠网卡驱动程序。

网卡驱动从 IP 模块获取到包之后，会将其复制到网卡内的缓存区中，接着会其开头加上报头和起始帧分界符，在末尾加上用于检测错误的帧校验序列。

最后网卡会将包转为电信号，通过网线发送出去。

### 域名解析的工作流程

- 客户端首先会发出一个 DNS 请求，问 www.server.com 的 IP 是啥，并发给本地 DNS 服务器（也就是客户端的 TCP/IP 设置中填写的 DNS 服务器地址）。
- 本地域名服务器收到客户端的请求后，如果缓存里的表格能找到 www.server.com，则它直接返回 IP 地址。如果没有，本地 DNS 会去问它的根域名服务器：“老大， 能告诉我 www.cxyxiaowu.com 的 IP 地址吗？” 根域名服务器是最高层次的，它不直接用于域名解析，但能指明一条道路。
- 根 DNS 收到来自本地 DNS 的请求后，发现后置是 .com，说：“www.server.com 这个域名归 .com 区域管理”，我给你 .com 顶级域名服务器地址给你，你去问问它吧。
- 本地 DNS 收到顶级域名服务器的地址后，发起请求问“老二， 你能告诉我 www.server.com  的 IP 地址吗？”
- 顶级域名服务器说：“我给你负责 www.server.com 区域的权威 DNS 服务器的地址，你去问它应该能问到”。
- 本地 DNS 于是转向问权威 DNS 服务器：“老三，www.server.com对应的IP是啥呀？” server.com 的权威 DNS 服务器，它是域名解析结果的原出处。为啥叫权威呢？就是我的域名我做主。
- 权威 DNS 服务器查询后将对应的 IP 地址 X.X.X.X 告诉本地 DNS。
- 本地 DNS 再将 IP 地址返回客户端，客户端和目标建立连接。





![httpformat](../../../images/Interview/httpformat.png)